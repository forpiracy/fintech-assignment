<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Accounts</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <style>
        .container {
            margin-top: 100px;
        }
        .inputMoney {
            width: 100px;
        }
        .deposit {
            background-color: green;
            border: none;
        }
        .withdraw {
            background-color: yellow;
            border: none;
        }
        .delete-account{
            background-color: red;
            border: none;
        }
        .create {
            margin-bottom: 20px;
        }
        .create-account {
            background-color: lightseagreen;
        }
    </style>
</head>
<body>
    <%- include('navbar.ejs')%>
    <div class="container">
        <div class="create">
            <h2>Create Account</h2>
            <form id="create-account-form">
                <input id="create-account-input" name="account_name" type="text" placeholder="Name of the Account" required>
                <button class="create-account" type="submit">Create</button>
            </form>
        </div>
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Accounts</th>
                    <th scope="col">Account Name</th>
                    <th scope="col">Balance</th>
                    <th scope="col">Deposit</th>
                    <th scope="col">Withdraw</th>
                    <th scope="col">Delete</th>
                </tr>
            </thead>
            <tbody>
                <%  for(let i=0; i<accounts.length; i++){ %>
                <tr>
                    <th scope="row"> <%= i+1 %> </th>
                    <td> <%= accounts[i].account_name %> </td>
                    <td> <%= accounts[i].balance%> Rs</td>
                    <td>
                        <form class="deposit-form" id-data="<%= accounts[i].account_id %>">
                            <input id="deposit-input" placeholder="amount" type="number" class="inputMoney" required>
                            <button class="deposit" type="submit">Deposit</button>
                        </form>
                    </td>
                    <td>
                        <form class="withdraw-form" id-data="<%= accounts[i].account_id %>">
                            <input id="withdraw-input" placeholder="amount" type="number" class="inputMoney" required>
                            <button class="withdraw" type="submit">Withdraw</button>
                        </form>
                    </td>
                    <td>
                        <form class="delete-account-form" id-data="<%= accounts[i].account_id %>">
                            <button class="delete-account" type="submit">Delete Account</button>
                        </form>
                    </td>
                </tr>
                <% } %>
            </tbody>
        </table>
    </div>
</body>
<script>
    const token = localStorage.getItem('token');
    document.getElementById('create-account-form').addEventListener('submit', async function(event) {
        event.preventDefault();
        const accountName = document.getElementById('create-account-input').value;
        try {
            const response = await fetch('/create-account', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `${token}`
                },
                body: JSON.stringify({ account_name: accountName })
            });

            if (response.status === 200) {
                // If the account creation was successful, reload the page
                document.getElementById('tokenField').value = token;
                document.getElementById('redirectForm').submit();
            } else if (response.status === 400) {
                const errorData = await response.json();
                alert('Error: ' + errorData.error);
            } else {
                alert('An unexpected error occurred.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An unexpected error occurred.');
        }
    });

    document.querySelectorAll('.deposit-form').forEach(form => {
        form.addEventListener('submit', async function(event) {
            event.preventDefault();
            const amount = form.querySelector('#deposit-input').value;
            const accountId = form.getAttribute('id-data');
            try {
                const response = await fetch('/deposit', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `${token}`
                    },
                    body: JSON.stringify({ amount, accountId })
                });

                if (response.status === 200) {
                    // If the account creation was successful, reload the page
                    document.getElementById('tokenField').value = token;
                    document.getElementById('redirectForm').submit();
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    alert('Error: ' + errorData.error);
                } else {
                    alert('An unexpected error occurred.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An unexpected error occurred.');
            }
        });
    });

    document.querySelectorAll('.withdraw-form').forEach(form => {
        form.addEventListener('submit', async function(event) {
            event.preventDefault();
            const amount = form.querySelector('#withdraw-input').value;
            const accountId = form.getAttribute('id-data');
            try {
                const response = await fetch('/withdraw', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `${token}`
                    },
                    body: JSON.stringify({ amount, accountId })
                });

                if (response.status === 200) {
                    // If the account creation was successful, reload the page
                    document.getElementById('tokenField').value = token;
                    document.getElementById('redirectForm').submit();
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    alert('Error: ' + errorData.error);
                } else {
                    alert('An unexpected error occurred.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An unexpected error occurred.');
            }
        });
    });

    document.querySelectorAll('.delete-account-form').forEach(form => {
        form.addEventListener('submit', async function(event) {
            event.preventDefault();
            const accountId = form.getAttribute('id-data');
            try {
                const response = await fetch('/delete-account', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `${token}`
                    },
                    body: JSON.stringify({ accountId })
                });

                if (response.status === 200) {
                    // If the account creation was successful, reload the page
                    document.getElementById('tokenField').value = token;
                    document.getElementById('redirectForm').submit();
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    alert('Error: ' + errorData.error);
                } else {
                    alert('An unexpected error occurred.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An unexpected error occurred.');
            }
        });
    });
</script>
</html>
